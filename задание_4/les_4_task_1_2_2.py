from cProfile import run
from random import randint


def test(func):
    number_list = [[-84, -12, -55, -45, 84, -81, -96, 74, -79, 34, 29, 34, 89, -68, -100, -21, -5, 100, 49, 91],
            [98, 94, 2, 32, -64, 70, 40, 2, 91, 43, -48, -11, 89, -3, -64, 45, 59, 19, -79, -37],
            [79, -96, -60, 36, -59, 78, 52, 96, -78, 42, -12, 82, -25, -83, -46, 54, 11, -97, 24, 70],
            [96, -10, 86, 89, -19, 39, 1, -69, 60, 35, 60, 87, 59, -7, -99, -58, -3, 77, 61, -74],
            [79, 67, 4, -10, -78, -74, 74, 58, 53, -45, -56, -67, -60, 8, -31, 30, -84, -4, -5, 9]]
    lst = [[-84, -12, -55, -45, 84, -81, -96, 74, -79, 34, 29, 34, 89, -68, 100, -21, -5, -100, 49, 91],
            [-79, 94, 2, 32, -64, 70, 40, 2, 91, 43, -48, -11, 89, -3, -64, 45, 59, 19, 98, -37],
            [79, -96, -60, 36, -59, 78, 52, -97, -78, 42, -12, 82, -25, -83, -46, 54, 11, 96, 24, 70],
            [-99, -10, 86, 89, -19, 39, 1, -69, 60, 35, 60, 87, 59, -7, 96, -58, -3, 77, 61, -74],
            [-84, 67, 4, -10, -78, -74, 74, 58, 53, -45, -56, -67, -60, 8, -31, 30, 79, -4, -5, 9]]
    for i, item in enumerate(lst):
        assert item == func(number_list[i])
        print(f"Test {i+1}  OK")


"""3. В массиве случайных целых чисел поменять местами минимальный и максимальный элементы."""


def func(number_list):
    min_list = min(number_list)
    max_list = max(number_list)
    min_pos = number_list.index(min_list)
    max_pos = number_list.index(max_list)
    number_list[min_pos] = max_list
    number_list[max_pos] = min_list
    return number_list

def func_time(n):
    if n == 0:
        number_list = [-93, -36, 9, 26, 75, -42, 36, 89, -62, 65, -33, -4, -72, -20, 69, -16, -94, -26, -43, -15, 34, -18, -96, 86, 85, -5, -22, -90, 67, -83, 32, 3, 30, -76, 40, 54, 69, -90, -23, -72, -45, -54, -12, -24, -44, 59, 70, -28, 45, 47, 86, -81, -67, -7, 30, 8, 5, 37, -68, 29, 8, -87, -76, 28, -87, -59, 28, 4, 73, 92, -77, -68, 46, 90, 80, -18, 59, -88, -100, 11, -62, 68, 65, -69, 45, 2, 77, -42, -51, 18, 97, -55, 19, -7, -26, -19, 55, -50, -44, 91]
    else:
        number_list = [42, -85, 86, -46, -30, 70, 39, 23, -48, -33, -28, -24, 96, -73, -41, -16, -82, 63, 73, -33, 59, 31, -98, -40, 19, -13, -68, -85, -38, 58, -52, 23, -43, 84, 87, -56, -14, 74, 17, 52, -86, 23, 85, 55, 62, 22, -94, 78, -73, -60, -91, 35, -47, 50, 50, 94, -15, -41, 34, 55, 47, 5, 92, -58, -26, -57, 82, 12, -82, -60, 46, 69, 81, 19, -7, 24, -51, 85, 46, -11, 67, 53, -55, -100, 72, 92, 7, -12, -84, -47, 71, 63, 57, -82, -36, 59, 53, -80, -36, 54, 2, -58, -65, -65, 22, 43, -1, 74, -18, 74, 99, -10, -79, -31, 30, -78, 64, -65, 9, 74, -9, 46, 0, -47, -18, 45, 71, 45, 27, -49, -82, 11, -87, 63, -97, 57, -48, -19, -37, -50, -79, 75, 39, -94, -26, -87, -13, -8, -98, 25, 60, -98, 44, 31, -56, 9, 61, 70, 48, 67, -24, 9, -8, -5, 41, -68, -82, 0, -85, -19, -72, -88, 59, 20,89, 96, 72, -9, 73, 27, -8, -19, -95, 75, 94, -73, 36, 61, -71, -82, 11, -74, 16, -3, 81, 100, 100, -65, 83, 95, 72, -49, -75, -35, 47, -7, -23, 82, -16,34, -96, 18, -63, 8, 96, 30, -67, 32, -9, -62, 22, -58, -76, -29, -13, -63, 99, 62, 61, 8, -34, 44, -52, -71, -65, 3, -58, -31, 14, 6, 66, 22, -72, 79, -31, 80, -61, -47, 77, -64, 62, 36, -73, 26, -25, 29, -94, -37, 69, 67, 64, 37, -60, -90, 82, 100, -76, 52, -90, 80, -64, 71, -98, -45, 31, -43, 63, -77, 83, 13, 8, -97, 79, 82, 17, 52, -72, 25, -12, 95, -27, 97, 33, -40, -99, -58, -72, -84, -39, 55, -71, -43, -90, -99, 13, 36, 48, -96, 23, -46, -79, -39, -37, 53, -41, -94, 95, 94, 50, 79, -38, -21, -76, 61, -79, -67, 44, -45, -47, -68, -12, -83, -95, -15, 36, -76, 15, -8, 46, -75, -65, 32, -52, -93, 22, -18,78, 6, 4, 85, 25, -21, 41, 62, 47, -10, 51, -3, -44, -2, 80, 98, 80, 19, 100, 24, -36, 34, 13, -38, 30, -4, 38, -73, 76, 93, 79, 21, 5, 91, -83, -76, 88,-53, 94, 28, -60, 9, -3, 71, 69, -16, -29, 71, 93, 24, 51, -76, -88, 99, -75, -87, -75, -79, 81, -42, 46, 88, -55, 69, -96, 4, -9, -97, -99, 6, 23, -35, -59, -35, -41, 42, -47, -7, 30, 55, 28, -59, -6, 5, -32, 54, -5, -27, 23, 23, 57, 9, -67, 38, 63, 92, 25, -100, -6, 78, 34, 80, 7, -11, -29, 47, -20, 62, -60, 63, 33, -89, -30, -22, -28, -24, -47, -75, -37, -76, -63, -23, -77, -85, -4, -18, -24, -78, 57, 24, 54, -100, 28, -19, 79, -85, 48, 95, 20, 31, -61, 52, 98, -15, -100, -17, 37, 96, -66, -5, -85, -9, 12, 63]
    min_list = min(number_list)
    max_list = max(number_list)
    min_pos = number_list.index(min_list)
    max_pos = number_list.index(max_list)
    number_list[min_pos] = max_list
    number_list[max_pos] = min_list
    return number_list

# test(func)

# 100
# number_list = [-93, -36, 9, 26, 75, -42, 36, 89, -62, 65, -33, -4, -72, -20, 69, -16, -94, -26, -43, -15, 34, -18, -96, 86, 85, -5, -22, -90, 67, -83, 32, 3, 30, -76, 40, 54, 69, -90, -23, -72, -45, -54, -12, -24, -44, 59, 70, -28, 45, 47, 86, -81, -67, -7, 30, 8, 5, 37, -68, 29, 8, -87, -76, 28, -87, -59, 28, 4, 73, 92, -77, -68, 46, 90, 80, -18, 59, -88, -100, 11, -62, 68, 65, -69, 45, 2, 77, -42, -51, 18, 97, -55, 19, -7, -26, -19, 55, -50, -44, 91]
# run("func(number_list)")
# 8 function calls in 0.000 seconds
# 1    0.000    0.000    0.000    0.000 les_4_task_1_2_2.py:24(func)

# 500
# number_list = [42, -85, 86, -46, -30, 70, 39, 23, -48, -33, -28, -24, 96, -73, -41, -16, -82, 63, 73, -33, 59, 31, -98, -40, 19, -13, -68, -85, -38, 58, -52, 23, -43, 84, 87, -56, -14, 74, 17, 52, -86, 23, 85, 55, 62, 22, -94, 78, -73, -60, -91, 35, -47, 50, 50, 94, -15, -41, 34, 55, 47, 5, 92, -58, -26, -57, 82, 12, -82, -60, 46, 69, 81, 19, -7, 24, -51, 85, 46, -11, 67, 53, -55, -100, 72, 92, 7, -12, -84, -47, 71, 63, 57, -82, -36, 59, 53, -80, -36, 54, 2, -58, -65, -65, 22, 43, -1, 74, -18, 74, 99, -10, -79, -31, 30, -78, 64, -65, 9, 74, -9, 46, 0, -47, -18, 45, 71, 45, 27, -49, -82, 11, -87, 63, -97, 57, -48, -19, -37, -50, -79, 75, 39, -94, -26, -87, -13, -8, -98, 25, 60, -98, 44, 31, -56, 9, 61, 70, 48, 67, -24, 9, -8, -5, 41, -68, -82, 0, -85, -19, -72, -88, 59, 20,89, 96, 72, -9, 73, 27, -8, -19, -95, 75, 94, -73, 36, 61, -71, -82, 11, -74, 16, -3, 81, 100, 100, -65, 83, 95, 72, -49, -75, -35, 47, -7, -23, 82, -16,34, -96, 18, -63, 8, 96, 30, -67, 32, -9, -62, 22, -58, -76, -29, -13, -63, 99, 62, 61, 8, -34, 44, -52, -71, -65, 3, -58, -31, 14, 6, 66, 22, -72, 79, -31, 80, -61, -47, 77, -64, 62, 36, -73, 26, -25, 29, -94, -37, 69, 67, 64, 37, -60, -90, 82, 100, -76, 52, -90, 80, -64, 71, -98, -45, 31, -43, 63, -77, 83, 13, 8, -97, 79, 82, 17, 52, -72, 25, -12, 95, -27, 97, 33, -40, -99, -58, -72, -84, -39, 55, -71, -43, -90, -99, 13, 36, 48, -96, 23, -46, -79, -39, -37, 53, -41, -94, 95, 94, 50, 79, -38, -21, -76, 61, -79, -67, 44, -45, -47, -68, -12, -83, -95, -15, 36, -76, 15, -8, 46, -75, -65, 32, -52, -93, 22, -18,78, 6, 4, 85, 25, -21, 41, 62, 47, -10, 51, -3, -44, -2, 80, 98, 80, 19, 100, 24, -36, 34, 13, -38, 30, -4, 38, -73, 76, 93, 79, 21, 5, 91, -83, -76, 88,-53, 94, 28, -60, 9, -3, 71, 69, -16, -29, 71, 93, 24, 51, -76, -88, 99, -75, -87, -75, -79, 81, -42, 46, 88, -55, 69, -96, 4, -9, -97, -99, 6, 23, -35, -59, -35, -41, 42, -47, -7, 30, 55, 28, -59, -6, 5, -32, 54, -5, -27, 23, 23, 57, 9, -67, 38, 63, 92, 25, -100, -6, 78, 34, 80, 7, -11, -29, 47, -20, 62, -60, 63, 33, -89, -30, -22, -28, -24, -47, -75, -37, -76, -63, -23, -77, -85, -4, -18, -24, -78, 57, 24, 54, -100, 28, -19, 79, -85, 48, 95, 20, 31, -61, 52, 98, -15, -100, -17, 37, 96, -66, -5, -85, -9, 12, 63]
# run("func(number_list)")
# 8 function calls in 0.000 seconds
# 1    0.000    0.000    0.000    0.000 les_4_task_1_2_2.py:24(func)

# 100
# "les_4_task_1_2_2.func_time(0)"
# 1000 loops, best of 5: 9.52 usec per loop

# 500
# "les_4_task_1_2_2.func_time(1)"
# 1000 loops, best of 5: 34.8 usec per loop